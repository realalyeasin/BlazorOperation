@page "/category/create"
@page "/category/edit/{id:int}"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
	<h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>
	<div class="col-7">
		<EditForm Model="Category" OnValidSubmit="UpdateInsertCategory">
			<DataAnnotationsValidator/>
			<div class="form-group">
				<label>Name</label>
				<InputText @bind-Value="Category.Name" class="form-control"></InputText>
				<ValidationMessage For="()=>Category.Name"></ValidationMessage>
			</div>
			<div class="form-group py-3">
				<button class="btn btn-dark">@Title</button>
				<NavLink href="category" class="btn btn-dark">Back to the list</NavLink>
			</div>
		</EditForm>
	</div>
</div>

@code {

	[Parameter]
	public int Id { get; set; }

	private CategoryDTO Category { get; set; } = new CategoryDTO();
	private string Title { get; set; } = "Create";
	public bool IsLoading { get; set; } = true;
	protected override async Task OnInitializedAsync()
	{
		if (Id == 0)
		{
			IsLoading = false;
		}
		else
		{
			Title = "Update";
			await Task.Run(LoadCategories);
		}

	}

	private void LoadCategories()
	{
		Category = _categoryRepository.Get(Id);
		IsLoading = false;
	}

	private void UpdateInsertCategory()
	{
		if (Category.Id == 0)
		{
			_categoryRepository.Create(Category);
		}
		else
		{
			_categoryRepository.Update(Category);
		}
		_navigationManager.NavigateTo("category");
	}
}
